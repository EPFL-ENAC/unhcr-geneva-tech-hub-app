version: "3.9"

include:
   - path: ./minio/minio-docker-compose.yml
     project_directory: ./minio
     env_file:
      - ./.env

services:
  reverse-proxy:
    image: traefik:v2.9
    command:
      - "--providers.docker"
      - "--providers.file.directory=/configuration/"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.websecure.address=:443"
      # - "--api.dashboard=true"
      # - "--api.insecure=true"
    environment:
      - SSL_CERT_CRT=${SSL_CERT_CRT}
      - SSL_CERT_KEY=${SSL_CERT_KEY}
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/configuration/traefik.yml
      - /etc/ssl:/etc/ssl
  frontend:
    build: ./frontend
    env_file:
      - ./frontend/.env
    environment:
      - BASE_URL=${BASE_URL}
    labels:
      - "traefik.enable=true"
        # Router for handling specific redirection (e.g., from / to /base_url/)
      - "traefik.http.routers.redirect-to-base.priority=10"
      - "traefik.http.routers.redirect-to-base.tls=true"
      - "traefik.http.routers.redirect-to-base.rule=Host(`localhost`) && (Path(`/`) || PathPrefix(`/`))"
      - "traefik.http.routers.redirect-to-base.middlewares=redirect-to"
      - "traefik.http.middlewares.redirect-to.redirectregex.regex=^https?:\\/\\/([^\\/]+)\\/?$$"
      - "traefik.http.middlewares.redirect-to.redirectregex.replacement=https://$$1${BASE_URL}"
      - "traefik.http.middlewares.redirect-to.redirectregex.permanent=true"
      # Router for handling the frontend, with the base URL, and stripping the prefix from the request because
      # the frontend is not aware of the base URL (e.g., /base_url/... -> /...)
      - "traefik.http.routers.frontend.priority=100"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.rule=PathPrefix(`${BASE_URL}`)"
      - "traefik.http.routers.frontend.middlewares=frontend-stripprefix,compress"
      - "traefik.http.middlewares.compress.compress=true"
      - "traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes=${BASE_URL_WITHOUT_SLASH}"
    restart: unless-stopped
    depends_on:
      - couchdb
      - reverse-proxy
  init_couchdb:
    image: python:3.12-alpine
    command: /entrypoint.sh
    env_file:
      - ./frontend/.env
    volumes:
        - ./couchdb/entrypoint.sh:/entrypoint.sh
        - ./couchdb/local.ini:/local.ini
  couchdb:
    image: couchdb:3.3
    env_file:
      - ./frontend/.env
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - COUCHDB_HOST=couchdb
    labels:
      - "traefik.http.routers.couchdb.priority=1000"
      - "traefik.http.routers.couchdb.tls=true"
      - "traefik.http.routers.couchdb.rule=PathPrefix(`${BASE_URL_WITHOUT_SLASH}${DB_PREFIX}`)"
      - "traefik.http.routers.couchdb.middlewares=couchdb-stripprefix,test-compress"
      - "traefik.http.middlewares.couchdb-stripprefix.stripprefix.prefixes=${BASE_URL_WITHOUT_SLASH}${DB_PREFIX}"
      - "traefik.http.middlewares.couchdb-stripprefix.stripprefix.forceSlash=false"
      - "traefik.http.services.couchdb.loadbalancer.server.port=5984"
      - "traefik.http.middlewares.test-compress.compress=true"
    depends_on:
        init_couchdb:
          condition: service_completed_successfully
    expose:
      - '5984'
      - '4369'
      - '9100'
    ports:
      - "5984:5984"
    restart: unless-stopped
    volumes:
      - couchdb_data:/opt/couchdb/data/
      - ./couchdb/local.ini:/opt/couchdb/etc/local.d/local.ini
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 10s
  couchdb-setup:
    environment:
      - COUCHDB_USER=${COUCHDB_USER}
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD}
      - COUCHDB_HOST=couchdb
    labels:
      - "traefik.http.services.couchdb-setup.loadbalancer.server.port=9999"
    build: ./couchdb-setup
    depends_on:
      - couchdb
  data-setup:
    build: ./data-setup
    env_file:
      - .env
    environment:
      - aws_key=${S3_ACCESS_KEY_ID}
      - aws_secret=${S3_SECRET_ACCESS_KEY}
      - s3_host_base=${S3_ENDPOINT_HOSTNAME}
      - cmd=sync-local-to-s3
      - DEST_S3=s3://${S3_Bucket}
    # volumes:
      # - ./data-setup/s3_cdn_dump:/opt/src
      # - ./data-setup/.s3cfg:/root/.s3cfg
    depends_on:
      - nginx-minio
  azure-cron:
    container_name: azure-cron
    build: ./azure-cron
    init: true
    environment:
      - CUSTOM_ENV_VAR=foobar
    volumes:
      - ./azure-cron/cron-tab.txt:/var/spool/cron/crontabs/root
    depends_on:
      - couchdb
  rest-api:
    build: ./rest-api
    env_file:
      - .env
    environment:
      - AUTH_SERVER="http://couchdb:5984"
    expose:
      - '5050'
    ports:
      - "5050:5050"
    labels:
      - "traefik.http.routers.restAPI.priority=1001"
      - "traefik.http.routers.restAPI.tls=true"
      - "traefik.http.routers.restAPI.rule=PathPrefix(`${BASE_URL_WITHOUT_SLASH}${API_PREFIX}`)"
      - "traefik.http.services.restAPI.loadbalancer.server.port=5050"
      - "traefik.http.routers.restAPI.middlewares=restAPI-middleware@docker,test-compress,rest-api-ratelimit"
      - "traefik.http.middlewares.restAPI-middleware.stripprefix.prefixes=${BASE_URL_WITHOUT_SLASH}${API_PREFIX}"
      - "traefik.http.middlewares.rest-api-ratelimit.ratelimit.average=50"
      - "traefik.http.middlewares.rest-api-ratelimit.ratelimit.burst=25"
      - "traefik.http.middlewares.rest-api-ratelimit.ratelimit.period=1"
      - "traefik.http.middlewares.test-compress.compress=true"
    restart: unless-stopped
    depends_on:
      - couchdb
  s3_server:
    build: ./s3_server
    restart: unless-stopped
    environment:
      - DNS=${DNS}
      - S3_ENDPOINT_HOSTNAME=${S3_ENDPOINT_HOSTNAME}
      - S3_ENDPOINT_PROTOCOL=${S3_ENDPOINT_PROTOCOL}
      - S3_BUCKET_NAME=${S3_Bucket}
    labels:
      - "traefik.http.routers.s3Server.priority=1002"
      - "traefik.http.routers.s3Server.tls=true"
      - "traefik.http.routers.s3Server.rule=PathPrefix(`${BASE_URL_WITHOUT_SLASH}${S3_PREFIX}`)"
      - "traefik.http.routers.s3Server.middlewares=s3Server-stripprefix"
      - "traefik.http.middlewares.s3Server-stripprefix.stripprefix.prefixes=${BASE_URL_WITHOUT_SLASH}${S3_PREFIX}"
      - "traefik.http.services.s3Server.loadbalancer.server.port=5660"
    expose:
      - '5660'
    ports:
      - "5660:5660"

volumes:
  couchdb_data:
    driver: local
